>> Encryption comes in two forms, as do the keys.
Symmetric encryption uses one key, the same key for encrypting and decrypting.
It's very fast, but there's a key distribution security problem:
How do you distribute a secure key over an insecure medium?
If a man in the middle gets the key as it's transmitted, that person can use it to decrypt
and maybe even change and re-encrypt the messages that flow between two parties.
One might think an out of band method by calling someone with the key
or emailing it would address the issue, but that's not scalable.
Older symmetric encryption algorithms include DES, 3DES, and RC4.
Advanced Encryption Standard, AES, is the government-adopted
and worldwide symmetric encryption algorithm used today.
Asymmetric encryption uses two keys, one called a public key,
the other one called a private key.
There's no key distribution security problem,
but asymmetric encryption is much slower than symmetric encryption.
When you encrypt with the public key,
the ciphertext can only be decrypted with the private key.
When you encrypt with a private key,
the ciphertext can only be decrypted with the public key.
We'll see examples of each in a little bit.
RSA -- named after its inventors Rivest, Shamir, and Adleman --
is the most widely used asymmetric encryption algorithm.
It's used for SSL/TLS -- secure sockets layer/transport layer security --
for protecting information you transmit and receive over the Internet, for instance,
when you do your online banking or simply log into a website.